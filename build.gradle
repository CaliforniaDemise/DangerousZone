plugins {
    id 'java'
    id 'xyz.wagyourtail.unimined' version "1.3.9"
}

group = maven_group
version = mod_version

base {
    archivesName = project.archives_base_name
}

build {
    subprojects.every {
        build
    }
}

jar {
    enabled = false
}

subprojects {
    apply plugin: "java"
    apply plugin: "xyz.wagyourtail.unimined"

    group = rootProject.group
    version = rootProject.version

    build {
        afterEvaluate {
            var f = new File(buildDir, "libs/" + tasks.remapJar.archiveFileName.get())
            f.renameTo(new File(rootProject.buildDir, "libs/" + rootProject.archivesBaseName + "-" + tasks.remapJar.archiveFileName.get()))
        }
    }

    unimined.minecraft(sourceSets.main) {
        version mc_version

        minecraftForge {
            loader forge_version
        }

        mappings {
            searge()
            mcp("stable", mcp_version)
        }

        runs.config("client") {
            jvmArgs("-Dfml.coreMods.load=surreal.dangerouszone.core.DZCore")
        }
    }

    tasks.withType(JavaCompile).configureEach {
        if (it.name in ["compileMcLauncherJava", "compilePatchedMcJava"]) {
             return
        }
        it.options.encoding = "UTF-8"
        it.sourceCompatibility = 8
        it.targetCompatibility = 8
    }

    processResources {
        inputs.property 'version', project.version
        inputs.property 'mcversion', mc_version

        filesMatching(['mcmod.info', 'pack.mcmeta']) { fcd ->
            fcd.expand (
                    'modid': rootProject.mod_id,
                    'modname': rootProject.mod_name,
                    'version': rootProject.version,
                    'mcversion': mc_version
            )
        }

//        if (project.use_access_transformer.toBoolean()) {
//            rename '(.+_at.cfg)', 'META-INF/$1' // Make sure Access Transformer files are in META-INF folder
//        }
    }

    jar {
        manifest {
            attributes([
                    "FMLCorePlugin" : "surreal.dangerouszone.core.DZCore",
                    "FMLCorePluginContainsFMLMod" : true,
                    "ForceLoadAsMod" : project.gradle.startParameter.taskNames[0] == "build"
            ])
        }
    }
}